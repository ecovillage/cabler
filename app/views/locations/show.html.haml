.level
  .level-left
    %h1.title
      %i.fa.fa-map-marker
      Location
      = @location.name
  .level-right
    = link_to edit_location_path(@location), class: 'button level-item is-primary' do
      %span.icon
        %i.fa.fa-edit
      =t('edit')
    = link_to @location, method: :delete, data: { confirm: 'Are you sure?' }, class: 'button is-danger' do
      %span.icon
        %i.fa.fa-times
      =t('destroy')

- if @location.parent
  %section
    %h2.subtitle
      %span.icon
        %i.fa.fa-globe
      Parent Location
      = link_to @location.parent.name, @location.parent
  %br

- if @location.images.present?
  %section
    %h2.subtitle
      %i.fa.fa-image
      = @location.images.count
      - if @location.images.count == 1
        Image
      - else
        Images
    .columns.is-multiline
      - @location.images.each do |image|
        .column.is-narrow
          = link_to url_for(image), target: '_new' do
            %figure.image
              = image_tag image.variant(resize_to_fill: [180,120]).processed, class: 'has-rounded-corners is-hoverable'
    -#= link_to 'Add image', ''
  %br

%section
  %h2.subtitle
    %span.icon
      %i.fa.fa-server
    = @location.devices.count
    = Device.model_name.human(count: @location.devices.count).capitalize
    at this location
  
  .columns.is-multiline.is-vcentered
    - @location.devices.find_each do |device|
      .column.is-3
        .card
          %header.card-header
            %p.card-header-title.is-centered
              = link_to device do
                %i.fa.fa-hdd
                = device.human_identifier
          .card-content
            .content
              - if device.manufacturer.present?
                .manufacturer
                  = device.manufacturer
              - if device.model.present?
                .model
                  = device.model
              - if device.kind.present?
                %small.kind
                  (#{device.kind})
              = device.links.count
              links
              - if device.num_links
                (of #{device.num_links})
          .card-footer
            = link_to 'Edit', edit_device_path(device), class: 'card-footer-item is-6'
    .column.is-3
      = link_to new_device_path(location: @location), class: 'button is-fullwidth is-primary is-outlined' do
        %span.icon
          %i.fa.fa-plus
        %span.icon
          %i.fas.fa-hdd
        %span New device at this location

- if @location.links.present?
  %br
  %h2.subtitle
    %i.fa.fa-network-wired
    #{@location.links.count} Direct incoming Links
  = render partial: 'connections/table', locals: {connections: @connected_location.connections}

%br
-# .level
-#   .level-left
-#     = link_to edit_location_path(@location), class: 'button level-item is-primary' do
-#       %span.icon
-#         %i.fa.fa-edit
-#       =t('edit')
-#     = link_to @location, method: :delete, data: { confirm: 'Are you sure?' }, class: 'button is-danger' do
-#       %span.icon
-#         %i.fa.fa-times
-#       =t('destroy')

- if @location.children.present?
  %section
    %h1.subtitle
      %i.fa.fa-map-marker-alt
      = @location.children.count
      Child
      = Location.model_name.human(count: @location.children.count)
  %br
  .columns.is-multiline
    - @location.children.each do |child|
      = render 'location_card', location: child

  = link_to new_location_path(location: {parent_id: @location.id}), class: 'button is-primary is-outlined' do
    %span.icon
      %i.fa.fa-plus
    %span New Child