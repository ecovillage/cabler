.level
  .level-left
    %h1.title Topology via graphviz
  .level-right
    .level-item
      = link_to topology_path(format: :png, params: request.params), class: 'button is-dark' do
        Download .png
    .level-item
      = link_to topology_path(format: :dot, params: request.params), class: 'button is-dark' do
        Download .dot
    .level-item
      = link_to topology_path(format: :svg, params: request.params), class: 'button is-dark' do
        Download .svg
    -#.level-item
    -#  Change algorithm (digraph, circo, ...)
    -#.level-item
    -#  select center node

.columns
  .column.is-one-fifth
    = form_with model: @graph_configuration, builder: BulmaFormBuilder::FormBuilder, local: true, method: :get, class: 'box is-small' do |form|
      .field
        = form.label :rank_dir, class: 'is-small'
        = form.select :rank_dir, {'horizontal' => 'LR', 'vertical' => 'TB'}, class: 'is-small'
      .field
        = form.label :splines, class: 'is-small'
        = form.select :splines, {'wobbly' => true, 'ortho' => 'ortho', 'curved' => 'curved', 'line' => 'line', 'polyline' => 'polyline'}
    
      .field
        = form.label :location_shape, class: 'is-small'
        = form.select :location_shape, {'ellipse' => 'ellipse', 'box' => 'box'}
      .field
        = form.label :device_shape, class: 'is-small'
        = form.select :device_shape, {'ellipse' => 'ellipse', 'box' => 'box'}
      .field
        = form.label :show_ports
        = form.select :show_ports, {'all' => :all, 'only filled' => 'only_filled', 'none' => 'none'}
    
      .field
        = form.label :graphviz_layout_algorithm
        = form.select :graphviz_layout_algorithm, {'dot' => 'dot', 'neato' => 'neato', 'circo' => 'circo', 'twopi' => 'twopi', 'fdp' => 'fdp', 'sfdp' => 'sfdp'}
    
      .field
        = form.check_box :box_locations, label: t('box_locations')
      .field
        = form.check_box :label_edge_ends, label: t('label_ports')
      .field
        = form.check_box :show_locations, label: t('show_locations')
    
    
      = form.submit class: 'button is-primary', value: 'show'
    
  .column
    -#.box.wh100p
    -#  #topology-svg-viewport.wh100p
    -#    != @graph.to_svg(scale: '100%')
    -#    :javascript
    -#      var panZoomTiger = svgPanZoom('.pannable', {contain: true, controlIconsEnabled: true, fit: false});

    #thumbViewDiv
      != @graph.to_svg(scale: '20%', id: 'thumbView', classes: '')
    .box.wh100p
      -#%img(src="data:image/png;base64,#{Base64.encode64 @png}")
      #topology-svg-viewport.wh100p
        != @graph.to_svg(scale: '100%', id: 'topology-svg')
        :javascript
          //var panZoomTiger = svgPanZoom('.pannable', {contain: true, controlIconsEnabled: true, fit: false});
          thumbnailViewer({mainViewId: 'topology-svg',thumbViewId: 'thumbView'});

    .box(width="100%" height="100%" style="height: 100%")
      #topology-svg-viewport(width="100%" height="100%" style="height: 100%")
        != @graph.to_svg(scale: '100%')
        -#%img(src="data:image/png;base64,#{Base64.encode64 @png}")

-#%br
-#%object(type="image/svg+xml" data="#{topology_path format: :svg}")
-#%img(src="#{topology_path format: :svg}")
